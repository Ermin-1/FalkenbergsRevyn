@using Microsoft.AspNetCore.Html
@model FeedbackViewModel

@{
    ViewData["Title"] = "Home Page";
}

@if (Model == null)
{
    <p>Model is null</p>
}
else
{
    <div class="container">
        <div class="header">
            <img src="/images/logo.png" alt="Logo" class="logo" />
            <div class="navigation">
                <button class="btn">Positiva kommentarer</button>
                <button class="btn">Logga ut</button>
            </div>
        </div>
        <div class="feedback-section">
            @*  Positive *@
            <div class="feedback-category">
                <div class="d-flex justify-content-between">
                    <button class="category-btn">Positiva</button>
                    <div class="dropdown mb-3">
                        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                            Filtrera kommentarer
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            <li><a class="dropdown-item" href="@Url.Action("Index", new { filter = "latest", category ="positive"})">Senaste</a></li>
                            <li><a class="dropdown-item" href="@Url.Action("Index", new { filter = "unanswered", category="positive" })">Olästa</a></li>
                            <li><a class="dropdown-item" href="@Url.Action("Index", new {category="positive"})">Alla</a></li>
                        </ul>
                    </div>
                </div>
                <div class="feedback-list">
                    @foreach (var comment in Model.PositiveComments.Take(5))
                    {
                        <div class="feedback-item">
                            <p>@comment.Content</p>
                            @* <input type="text" name="ResponseContent" value="@comment.Responses.FirstOrDefault()?.ResponseContent"> *@
                            <button type="button" class="btn small" data-bs-toggle="modal" data-bs-target="#replyModal-@comment.CommentId">Se genererat svar</button>
                            <button type="button" class="btn small" data-bs-toggle="modal" data-bs-target="#hideModal-@comment.CommentId">Dölj från listan</button>
                            @* This is modal *@
                            @await Html.PartialAsync("ModalBase", new ModalViewModel
               {
                   ModalId = "replyModal-" + comment.CommentId,
                   Title = "Genererat svar",
                   Body = new HtmlString("Inte kopplat!"),
                   FooterButtons = new List<IHtmlContent>
                    {
                    new HtmlString("<button type='button' class='btn btn-primary'>Dölj från listan</button>"),
                    new HtmlString("<form asp-action='Edit' asp-controller='Response' method='post'><button type='submit' class='btn btn-primary'>Ändra svar</button></form>"),
                    new HtmlString("<button type='button' class='btn btn-secondary' data-bs-dismiss='modal'>Stäng</button>")
                    }
               })
                            @* modal for hide*@
                            @await Html.PartialAsync("ModalBase", new ModalViewModel
               {
                   ModalId = "hideModal-" + comment.CommentId,
                   Title = "",
                   Body = new HtmlString("Är du säker att du vill dölja kommentaren?"),
                   FooterButtons = new List<IHtmlContent>
                    {
                    new HtmlString ("<button type='button' class='btn btn-primary'>Ja! Dölj!</button>"),
                    new HtmlString ("<button type='button' class='btn btn-secondary' data-bs-dismiss='modal'>Nej</button>")
                    }
               })
                        </div>
                    }
                </div>
            </div>
            @*  Kritik! *@
            <div class="feedback-category">
                <div class="d-flex justify-content-between">
                    <button class="category-btn">Kritik</button>
                    <div class="dropdown mb-3">
                        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                            Filtrera kommentarer
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            <li><a class="dropdown-item" href="@Url.Action("Index", new { filter = "latest", category="critical" })">Senaste</a></li>
                            <li><a class="dropdown-item" href="@Url.Action("Index", new { filter = "unanswered", category="critical" })">Olästa</a></li>
                            <li><a class="dropdown-item" href="@Url.Action("Index", new {category ="critical"})">Alla</a></li>
                        </ul>
                    </div>
                </div>
                <div class="feedback-list">
                    @foreach (var comment in Model.CriticalComments.Take(5))
                    {
                        <div class="feedback-item">
                            <p>@comment.Content</p>
                            @* Kankse ta bort input om han vill ha bara pop-up*@
                            <form asp-action="Create" asp-controller="Response" method="post" style="display:inline;">
                                <input type="hidden" name="CommentId" value="@comment.CommentId" />
                                <input type="text" name="ResponseContent" placeholder="Svara här." required />
                                <button type="submit" class="btn small">Save svara här</button>
                            </form>
                            <button type="button" class="btn small" data-bs-toggle="modal" data-bs-target="#answerModal-@comment.CommentId">Svara</button>
                            <button type="button" class="btn small" data-bs-toggle="modal" data-bs-target="#hideModal-@comment.CommentId">Delete</button>

                            @await Html.PartialAsync("ModalBase", new ModalViewModel
               {
                   ModalId = $"answerModal-{comment.CommentId}",
                   Title = "Svar:",
                   Body = new HtmlString($@"
                    <form id='answerForm-{comment.CommentId}' asp-action='Create' asp-controller='Response' method='post'>
                    <input type='hidden' name='CommentId' value='{comment.CommentId}' />
                    <input type='text' name='ResponseContent' class='form-control' placeholder='Svara här.' required />
                    <button type='submit' class='btn btn-primary mt-2'>Skicka!</button>
                    </form>"),
                   FooterButtons = new List<IHtmlContent>
                    {
                    new HtmlString("<button type='button' class='btn btn-secondary' data-bs-dismiss='modal'>Stäng</button>")
                    }
               })

                            @await Html.PartialAsync("ModalBase", new ModalViewModel
               {
                   ModalId = "hideModal-" + comment.CommentId,
                   Title = "",
                   Body = new HtmlString("Är du säker att du vill dölja kommentaren?"),
                   FooterButtons = new List<IHtmlContent>
                    {
                    new HtmlString ( "<button type='button' class='btn btn-primary'>Ja! Dölj!</button>"),
                    new HtmlString (   "<button type='button' class='btn btn-secondary' data-bs-dismiss='modal'>Nej</button>")
                    }
               })
                        </div>
                    }
                </div>
            </div>
            @*  FRÅGOR! *@
            <div class="feedback-category">
                <div class="d-flex justify-content-between">
                    <button class="category-btn">Frågor</button>
                    <div class="dropdown mb-3">
                        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                            Filtrera kommentarer
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            <li><a class="dropdown-item" href="@Url.Action("Index", new { filter = "latest", category="questions" })">Senaste</a></li>
                            <li><a class="dropdown-item" href="@Url.Action("Index", new { filter = "unanswered", category="questions" })">Olästa</a></li>
                            <li><a class="dropdown-item" href="@Url.Action("Index", new {category="questions"})">Alla</a></li>
                        </ul>
                    </div>
                </div>
                <div class="feedback-list">
                    @foreach (var comment in Model.Questions.Take(5))
                    {
                        <div class="feedback-item">
                            <p>@comment.Content</p>
                            <form asp-action="Create" asp-controller="Response" method="post" style="display:inline;">
                                <input type="hidden" name="CommentId" value="@comment.CommentId" />
                                <input type="text" name="ResponseContent" placeholder="Svara här." required />
                                <button class="btn small" data-bs-toggle="modal" data-bs-target="#questionModal-@comment.CommentId">Svara</button>
                            </form>
                            <form asp-action="Delete" asp-controller="Comment" method="post" style="display:inline;">
                                <input type="hidden" name="id" value="@comment.CommentId" />
                                <button type="button" class="btn small">Dölj från listan</button>
                            </form>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

}

<style>
    body {
        background-color: black;
        color: white;
        font-family: Arial, sans-serif;
    }

    .container {
    }

    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .logo {
        width: 200px;
    }

    .navigation {
        display: flex;
        gap: 10px;
    }

    .feedback-section {
        display: flex;
        justify-content: space-between;
        margin-top: 30px;
    }

    .feedback-category {
        background-color: #333;
        padding: 20px;
        border-radius: 10px;
        margin: 0 10px;
        flex: 0 0 30%;
    }

    .category-btn {
        background-color: white;
        color: black;
        border: none;
        padding: 10px 20px;
        margin-bottom: 20px;
        /*    cursor: pointer; */
        border-radius: 5px;
    }

    .feedback-list {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    .feedback-item {
        background-color: #444;
        padding: 10px;
        border-radius: 5px;
    }

        .feedback-item input {
            margin-top: 10px;
            width: 100%;
            padding: 5px;
        }

    .btn {
        background-color: white;
        color: black;
        border: none;
        padding: 5px 10px;
        cursor: pointer;
        margin-top: 10px;
        border-radius: 5px;
    }

        .btn.small {
            font-size: 12px;
            padding: 5px 8px;
        }
</style>