@model FeedbackViewModel

@if (Model == null)
{
    <p>Model is null</p>
}
else
{
    <div class="container">
        <div class="feedback-section">
            <!-- Filter Dropdown for All Categories -->
            <div class="dropdown mb-3">
                @{
                    string buttonLabel = Model.CurrentFilter switch
                    {
                        "latest" => "Senaste",
                        "oldest" => "Älsta",
                        "unanswered" => "Olästa",
                        "all" => "Alla",
                        _ => "Filtrera kommentarer"
                    };
                }
                <button class="btn-menu dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                    @buttonLabel
                </button>
                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <li><a class="dropdown-item" href="/home/index?filter=latest">Senaste</a></li>
                    <li><a class="dropdown-item" href="/home/index?filter=oldest">Älsta</a></li>
                    <li><a class="dropdown-item" href="/home/index?filter=unanswered">Olästa</a></li>
                    <li><a class="dropdown-item" href="/home/index?filter=all">Alla</a></li>
                </ul>
            </div>

            <!-- Positiva Feedback -->
            <div class="feedback-category">
                <div class="d-flex justify-content-between">
                    <p class="category-btn">Positiva</p>
                </div>
                <div class="feedback-list">
                    @foreach (var comment in Model.PositiveComments)
                    {
                        <div class="feedback-item">
                            <p><strong>Tillhör inlägg:</strong> @(comment.Post != null ? comment.Post.Title : "Inlägget saknas")</p>
                            <!-- Lägg till titel på inlägget -->
                            <p class="ms-2">@comment.Content</p>
                            <p class="genererat">@comment.Responses?.FirstOrDefault()?.ResponseContent</p>
                            <button type="button" class="btn-small ms-2" data-bs-toggle="modal" data-bs-target="#hideModal-@comment.CommentId">Dölj från listan</button>
                            @await Html.PartialAsync("_HideModal", comment)
                        </div>
                    }
                </div>
            </div>

            <!-- Kritik Feedback -->
            <div class="feedback-category">
                <div class="d-flex justify-content-between">
                    <p class="category-btn">Kritik</p>
                </div>
                <div class="feedback-list">
                    @foreach (var comment in Model.CriticalComments)
                    {
                        <div class="feedback-item">
                            <p><strong>Tillhör inlägg:</strong> @(comment.Post != null ? comment.Post.Title : "Inlägget saknas")</p>
                            <p>@comment.Content</p>
                            <p class="answer @(string.IsNullOrEmpty(comment.Responses?.FirstOrDefault()?.ResponseContent) ? "bg-pink" : "bg-white")">
                                @(string.IsNullOrEmpty(comment.Responses?.FirstOrDefault()?.ResponseContent) ? "Ej svarat" : comment.Responses?.FirstOrDefault()?.ResponseContent)
                            </p>
                            @if (string.IsNullOrEmpty(comment.Responses?.FirstOrDefault()?.ResponseContent))
                            {
                                <button type="button" class="btn-small ms-2" data-bs-toggle="modal" data-bs-target="#answerModal-@comment.CommentId">Svara</button>
                            }
                            <button type="button" class="btn-small ms-2" data-bs-toggle="modal" data-bs-target="#hideModal-@comment.CommentId">Dölj från listan</button>
                            @await Html.PartialAsync("_AnswerModal", comment)
                            @await Html.PartialAsync("_HideModal", comment)
                        </div>
                    }
                </div>
            </div>

            <!-- Frågor Feedback -->
            <div class="feedback-category">
                <div class="d-flex justify-content-between">
                    <p class="category-btn">Frågor</p>
                </div>
                <div class="feedback-list">
                    @foreach (var comment in Model.Questions)
                    {
                        <div class="feedback-item">
                            <p><strong>Tillhör inlägg:</strong> @(comment.Post != null ? comment.Post.Title : "Inlägget saknas")</p>
                            <p>@comment.Content</p>
                            <p class="answer @(string.IsNullOrEmpty(comment.Responses?.FirstOrDefault()?.ResponseContent) ? "bg-pink" : "bg-white")">
                                @(string.IsNullOrEmpty(comment.Responses?.FirstOrDefault()?.ResponseContent) ? "Ej svarat" : comment.Responses?.FirstOrDefault()?.ResponseContent)
                            </p>
                            @if (string.IsNullOrEmpty(comment.Responses?.FirstOrDefault()?.ResponseContent))
                            {
                                <button type="button" class="btn-small ms-2" data-bs-toggle="modal" data-bs-target="#answerModal-@comment.CommentId">Svara</button>
                            }

                            <button type="button" class="btn-small ms-2" data-bs-toggle="modal" data-bs-target="#hideModal-@comment.CommentId">Dölj från listan</button>
                            @await Html.PartialAsync("_AnswerModal", comment)
                            @await Html.PartialAsync("_HideModal", comment)
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}
@await Html.PartialAsync("_Styles")